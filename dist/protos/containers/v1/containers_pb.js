// source: containers/v1/containers.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.com.docker.api.protos.containers.v1.Container', null, global);
goog.exportSymbol('proto.com.docker.api.protos.containers.v1.DeleteRequest', null, global);
goog.exportSymbol('proto.com.docker.api.protos.containers.v1.DeleteResponse', null, global);
goog.exportSymbol('proto.com.docker.api.protos.containers.v1.ExecRequest', null, global);
goog.exportSymbol('proto.com.docker.api.protos.containers.v1.ExecResponse', null, global);
goog.exportSymbol('proto.com.docker.api.protos.containers.v1.ListRequest', null, global);
goog.exportSymbol('proto.com.docker.api.protos.containers.v1.ListResponse', null, global);
goog.exportSymbol('proto.com.docker.api.protos.containers.v1.LogsRequest', null, global);
goog.exportSymbol('proto.com.docker.api.protos.containers.v1.LogsResponse', null, global);
goog.exportSymbol('proto.com.docker.api.protos.containers.v1.Port', null, global);
goog.exportSymbol('proto.com.docker.api.protos.containers.v1.RunRequest', null, global);
goog.exportSymbol('proto.com.docker.api.protos.containers.v1.RunResponse', null, global);
goog.exportSymbol('proto.com.docker.api.protos.containers.v1.StopRequest', null, global);
goog.exportSymbol('proto.com.docker.api.protos.containers.v1.StopResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.docker.api.protos.containers.v1.Port = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.docker.api.protos.containers.v1.Port, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.docker.api.protos.containers.v1.Port.displayName = 'proto.com.docker.api.protos.containers.v1.Port';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.docker.api.protos.containers.v1.Container = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.docker.api.protos.containers.v1.Container.repeatedFields_, null);
};
goog.inherits(proto.com.docker.api.protos.containers.v1.Container, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.docker.api.protos.containers.v1.Container.displayName = 'proto.com.docker.api.protos.containers.v1.Container';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.docker.api.protos.containers.v1.DeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.docker.api.protos.containers.v1.DeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.docker.api.protos.containers.v1.DeleteRequest.displayName = 'proto.com.docker.api.protos.containers.v1.DeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.docker.api.protos.containers.v1.DeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.docker.api.protos.containers.v1.DeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.docker.api.protos.containers.v1.DeleteResponse.displayName = 'proto.com.docker.api.protos.containers.v1.DeleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.docker.api.protos.containers.v1.StopRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.docker.api.protos.containers.v1.StopRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.docker.api.protos.containers.v1.StopRequest.displayName = 'proto.com.docker.api.protos.containers.v1.StopRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.docker.api.protos.containers.v1.StopResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.docker.api.protos.containers.v1.StopResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.docker.api.protos.containers.v1.StopResponse.displayName = 'proto.com.docker.api.protos.containers.v1.StopResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.docker.api.protos.containers.v1.RunRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.docker.api.protos.containers.v1.RunRequest.repeatedFields_, null);
};
goog.inherits(proto.com.docker.api.protos.containers.v1.RunRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.docker.api.protos.containers.v1.RunRequest.displayName = 'proto.com.docker.api.protos.containers.v1.RunRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.docker.api.protos.containers.v1.RunResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.docker.api.protos.containers.v1.RunResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.docker.api.protos.containers.v1.RunResponse.displayName = 'proto.com.docker.api.protos.containers.v1.RunResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.docker.api.protos.containers.v1.ExecRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.docker.api.protos.containers.v1.ExecRequest.repeatedFields_, null);
};
goog.inherits(proto.com.docker.api.protos.containers.v1.ExecRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.docker.api.protos.containers.v1.ExecRequest.displayName = 'proto.com.docker.api.protos.containers.v1.ExecRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.docker.api.protos.containers.v1.ExecResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.docker.api.protos.containers.v1.ExecResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.docker.api.protos.containers.v1.ExecResponse.displayName = 'proto.com.docker.api.protos.containers.v1.ExecResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.docker.api.protos.containers.v1.ListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.docker.api.protos.containers.v1.ListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.docker.api.protos.containers.v1.ListRequest.displayName = 'proto.com.docker.api.protos.containers.v1.ListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.docker.api.protos.containers.v1.ListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.docker.api.protos.containers.v1.ListResponse.repeatedFields_, null);
};
goog.inherits(proto.com.docker.api.protos.containers.v1.ListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.docker.api.protos.containers.v1.ListResponse.displayName = 'proto.com.docker.api.protos.containers.v1.ListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.docker.api.protos.containers.v1.LogsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.docker.api.protos.containers.v1.LogsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.docker.api.protos.containers.v1.LogsRequest.displayName = 'proto.com.docker.api.protos.containers.v1.LogsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.docker.api.protos.containers.v1.LogsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.docker.api.protos.containers.v1.LogsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.docker.api.protos.containers.v1.LogsResponse.displayName = 'proto.com.docker.api.protos.containers.v1.LogsResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.docker.api.protos.containers.v1.Port.prototype.toObject = function(opt_includeInstance) {
  return proto.com.docker.api.protos.containers.v1.Port.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.docker.api.protos.containers.v1.Port} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.containers.v1.Port.toObject = function(includeInstance, msg) {
  var f, obj = {
    hostPort: jspb.Message.getFieldWithDefault(msg, 1, 0),
    containerPort: jspb.Message.getFieldWithDefault(msg, 2, 0),
    protocol: jspb.Message.getFieldWithDefault(msg, 3, ""),
    hostIp: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.docker.api.protos.containers.v1.Port}
 */
proto.com.docker.api.protos.containers.v1.Port.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.docker.api.protos.containers.v1.Port;
  return proto.com.docker.api.protos.containers.v1.Port.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.docker.api.protos.containers.v1.Port} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.docker.api.protos.containers.v1.Port}
 */
proto.com.docker.api.protos.containers.v1.Port.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHostPort(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setContainerPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProtocol(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setHostIp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.docker.api.protos.containers.v1.Port.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.docker.api.protos.containers.v1.Port.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.docker.api.protos.containers.v1.Port} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.containers.v1.Port.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHostPort();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getContainerPort();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getProtocol();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getHostIp();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional uint32 host_port = 1;
 * @return {number}
 */
proto.com.docker.api.protos.containers.v1.Port.prototype.getHostPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.docker.api.protos.containers.v1.Port} returns this
 */
proto.com.docker.api.protos.containers.v1.Port.prototype.setHostPort = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 container_port = 2;
 * @return {number}
 */
proto.com.docker.api.protos.containers.v1.Port.prototype.getContainerPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.docker.api.protos.containers.v1.Port} returns this
 */
proto.com.docker.api.protos.containers.v1.Port.prototype.setContainerPort = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string protocol = 3;
 * @return {string}
 */
proto.com.docker.api.protos.containers.v1.Port.prototype.getProtocol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.docker.api.protos.containers.v1.Port} returns this
 */
proto.com.docker.api.protos.containers.v1.Port.prototype.setProtocol = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string host_ip = 4;
 * @return {string}
 */
proto.com.docker.api.protos.containers.v1.Port.prototype.getHostIp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.docker.api.protos.containers.v1.Port} returns this
 */
proto.com.docker.api.protos.containers.v1.Port.prototype.setHostIp = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.docker.api.protos.containers.v1.Container.repeatedFields_ = [10,11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.docker.api.protos.containers.v1.Container.prototype.toObject = function(opt_includeInstance) {
  return proto.com.docker.api.protos.containers.v1.Container.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.docker.api.protos.containers.v1.Container} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.containers.v1.Container.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    image: jspb.Message.getFieldWithDefault(msg, 2, ""),
    status: jspb.Message.getFieldWithDefault(msg, 3, ""),
    command: jspb.Message.getFieldWithDefault(msg, 4, ""),
    cpuTime: jspb.Message.getFieldWithDefault(msg, 5, 0),
    memoryUsage: jspb.Message.getFieldWithDefault(msg, 6, 0),
    memoryLimit: jspb.Message.getFieldWithDefault(msg, 7, 0),
    pidsCurrent: jspb.Message.getFieldWithDefault(msg, 8, 0),
    pidsLimit: jspb.Message.getFieldWithDefault(msg, 9, 0),
    labelsList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    portsList: jspb.Message.toObjectList(msg.getPortsList(),
    proto.com.docker.api.protos.containers.v1.Port.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.docker.api.protos.containers.v1.Container}
 */
proto.com.docker.api.protos.containers.v1.Container.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.docker.api.protos.containers.v1.Container;
  return proto.com.docker.api.protos.containers.v1.Container.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.docker.api.protos.containers.v1.Container} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.docker.api.protos.containers.v1.Container}
 */
proto.com.docker.api.protos.containers.v1.Container.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setImage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommand(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCpuTime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMemoryUsage(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMemoryLimit(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPidsCurrent(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPidsLimit(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addLabels(value);
      break;
    case 11:
      var value = new proto.com.docker.api.protos.containers.v1.Port;
      reader.readMessage(value,proto.com.docker.api.protos.containers.v1.Port.deserializeBinaryFromReader);
      msg.addPorts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.docker.api.protos.containers.v1.Container.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.docker.api.protos.containers.v1.Container.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.docker.api.protos.containers.v1.Container} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.containers.v1.Container.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getImage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCommand();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCpuTime();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getMemoryUsage();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getMemoryLimit();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getPidsCurrent();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = message.getPidsLimit();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getLabelsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getPortsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.com.docker.api.protos.containers.v1.Port.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.com.docker.api.protos.containers.v1.Container.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.docker.api.protos.containers.v1.Container} returns this
 */
proto.com.docker.api.protos.containers.v1.Container.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string image = 2;
 * @return {string}
 */
proto.com.docker.api.protos.containers.v1.Container.prototype.getImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.docker.api.protos.containers.v1.Container} returns this
 */
proto.com.docker.api.protos.containers.v1.Container.prototype.setImage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string status = 3;
 * @return {string}
 */
proto.com.docker.api.protos.containers.v1.Container.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.docker.api.protos.containers.v1.Container} returns this
 */
proto.com.docker.api.protos.containers.v1.Container.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string command = 4;
 * @return {string}
 */
proto.com.docker.api.protos.containers.v1.Container.prototype.getCommand = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.docker.api.protos.containers.v1.Container} returns this
 */
proto.com.docker.api.protos.containers.v1.Container.prototype.setCommand = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint64 cpu_time = 5;
 * @return {number}
 */
proto.com.docker.api.protos.containers.v1.Container.prototype.getCpuTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.docker.api.protos.containers.v1.Container} returns this
 */
proto.com.docker.api.protos.containers.v1.Container.prototype.setCpuTime = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 memory_usage = 6;
 * @return {number}
 */
proto.com.docker.api.protos.containers.v1.Container.prototype.getMemoryUsage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.docker.api.protos.containers.v1.Container} returns this
 */
proto.com.docker.api.protos.containers.v1.Container.prototype.setMemoryUsage = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint64 memory_limit = 7;
 * @return {number}
 */
proto.com.docker.api.protos.containers.v1.Container.prototype.getMemoryLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.docker.api.protos.containers.v1.Container} returns this
 */
proto.com.docker.api.protos.containers.v1.Container.prototype.setMemoryLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint64 pids_current = 8;
 * @return {number}
 */
proto.com.docker.api.protos.containers.v1.Container.prototype.getPidsCurrent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.docker.api.protos.containers.v1.Container} returns this
 */
proto.com.docker.api.protos.containers.v1.Container.prototype.setPidsCurrent = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional uint64 pids_limit = 9;
 * @return {number}
 */
proto.com.docker.api.protos.containers.v1.Container.prototype.getPidsLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.docker.api.protos.containers.v1.Container} returns this
 */
proto.com.docker.api.protos.containers.v1.Container.prototype.setPidsLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * repeated string labels = 10;
 * @return {!Array<string>}
 */
proto.com.docker.api.protos.containers.v1.Container.prototype.getLabelsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.com.docker.api.protos.containers.v1.Container} returns this
 */
proto.com.docker.api.protos.containers.v1.Container.prototype.setLabelsList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.com.docker.api.protos.containers.v1.Container} returns this
 */
proto.com.docker.api.protos.containers.v1.Container.prototype.addLabels = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.docker.api.protos.containers.v1.Container} returns this
 */
proto.com.docker.api.protos.containers.v1.Container.prototype.clearLabelsList = function() {
  return this.setLabelsList([]);
};


/**
 * repeated Port ports = 11;
 * @return {!Array<!proto.com.docker.api.protos.containers.v1.Port>}
 */
proto.com.docker.api.protos.containers.v1.Container.prototype.getPortsList = function() {
  return /** @type{!Array<!proto.com.docker.api.protos.containers.v1.Port>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.docker.api.protos.containers.v1.Port, 11));
};


/**
 * @param {!Array<!proto.com.docker.api.protos.containers.v1.Port>} value
 * @return {!proto.com.docker.api.protos.containers.v1.Container} returns this
*/
proto.com.docker.api.protos.containers.v1.Container.prototype.setPortsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.com.docker.api.protos.containers.v1.Port=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.docker.api.protos.containers.v1.Port}
 */
proto.com.docker.api.protos.containers.v1.Container.prototype.addPorts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.com.docker.api.protos.containers.v1.Port, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.docker.api.protos.containers.v1.Container} returns this
 */
proto.com.docker.api.protos.containers.v1.Container.prototype.clearPortsList = function() {
  return this.setPortsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.docker.api.protos.containers.v1.DeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.docker.api.protos.containers.v1.DeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.docker.api.protos.containers.v1.DeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.containers.v1.DeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    force: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.docker.api.protos.containers.v1.DeleteRequest}
 */
proto.com.docker.api.protos.containers.v1.DeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.docker.api.protos.containers.v1.DeleteRequest;
  return proto.com.docker.api.protos.containers.v1.DeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.docker.api.protos.containers.v1.DeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.docker.api.protos.containers.v1.DeleteRequest}
 */
proto.com.docker.api.protos.containers.v1.DeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForce(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.docker.api.protos.containers.v1.DeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.docker.api.protos.containers.v1.DeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.docker.api.protos.containers.v1.DeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.containers.v1.DeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getForce();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.com.docker.api.protos.containers.v1.DeleteRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.docker.api.protos.containers.v1.DeleteRequest} returns this
 */
proto.com.docker.api.protos.containers.v1.DeleteRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool force = 2;
 * @return {boolean}
 */
proto.com.docker.api.protos.containers.v1.DeleteRequest.prototype.getForce = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.docker.api.protos.containers.v1.DeleteRequest} returns this
 */
proto.com.docker.api.protos.containers.v1.DeleteRequest.prototype.setForce = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.docker.api.protos.containers.v1.DeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.docker.api.protos.containers.v1.DeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.docker.api.protos.containers.v1.DeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.containers.v1.DeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.docker.api.protos.containers.v1.DeleteResponse}
 */
proto.com.docker.api.protos.containers.v1.DeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.docker.api.protos.containers.v1.DeleteResponse;
  return proto.com.docker.api.protos.containers.v1.DeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.docker.api.protos.containers.v1.DeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.docker.api.protos.containers.v1.DeleteResponse}
 */
proto.com.docker.api.protos.containers.v1.DeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.docker.api.protos.containers.v1.DeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.docker.api.protos.containers.v1.DeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.docker.api.protos.containers.v1.DeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.containers.v1.DeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.docker.api.protos.containers.v1.StopRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.docker.api.protos.containers.v1.StopRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.docker.api.protos.containers.v1.StopRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.containers.v1.StopRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    timeout: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.docker.api.protos.containers.v1.StopRequest}
 */
proto.com.docker.api.protos.containers.v1.StopRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.docker.api.protos.containers.v1.StopRequest;
  return proto.com.docker.api.protos.containers.v1.StopRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.docker.api.protos.containers.v1.StopRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.docker.api.protos.containers.v1.StopRequest}
 */
proto.com.docker.api.protos.containers.v1.StopRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTimeout(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.docker.api.protos.containers.v1.StopRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.docker.api.protos.containers.v1.StopRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.docker.api.protos.containers.v1.StopRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.containers.v1.StopRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTimeout();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.com.docker.api.protos.containers.v1.StopRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.docker.api.protos.containers.v1.StopRequest} returns this
 */
proto.com.docker.api.protos.containers.v1.StopRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 timeout = 2;
 * @return {number}
 */
proto.com.docker.api.protos.containers.v1.StopRequest.prototype.getTimeout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.docker.api.protos.containers.v1.StopRequest} returns this
 */
proto.com.docker.api.protos.containers.v1.StopRequest.prototype.setTimeout = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.docker.api.protos.containers.v1.StopResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.docker.api.protos.containers.v1.StopResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.docker.api.protos.containers.v1.StopResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.containers.v1.StopResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.docker.api.protos.containers.v1.StopResponse}
 */
proto.com.docker.api.protos.containers.v1.StopResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.docker.api.protos.containers.v1.StopResponse;
  return proto.com.docker.api.protos.containers.v1.StopResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.docker.api.protos.containers.v1.StopResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.docker.api.protos.containers.v1.StopResponse}
 */
proto.com.docker.api.protos.containers.v1.StopResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.docker.api.protos.containers.v1.StopResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.docker.api.protos.containers.v1.StopResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.docker.api.protos.containers.v1.StopResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.containers.v1.StopResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.docker.api.protos.containers.v1.RunRequest.repeatedFields_ = [3,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.docker.api.protos.containers.v1.RunRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.docker.api.protos.containers.v1.RunRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.docker.api.protos.containers.v1.RunRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.containers.v1.RunRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    image: jspb.Message.getFieldWithDefault(msg, 2, ""),
    portsList: jspb.Message.toObjectList(msg.getPortsList(),
    proto.com.docker.api.protos.containers.v1.Port.toObject, includeInstance),
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : [],
    volumesList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.docker.api.protos.containers.v1.RunRequest}
 */
proto.com.docker.api.protos.containers.v1.RunRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.docker.api.protos.containers.v1.RunRequest;
  return proto.com.docker.api.protos.containers.v1.RunRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.docker.api.protos.containers.v1.RunRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.docker.api.protos.containers.v1.RunRequest}
 */
proto.com.docker.api.protos.containers.v1.RunRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setImage(value);
      break;
    case 3:
      var value = new proto.com.docker.api.protos.containers.v1.Port;
      reader.readMessage(value,proto.com.docker.api.protos.containers.v1.Port.deserializeBinaryFromReader);
      msg.addPorts(value);
      break;
    case 4:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addVolumes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.docker.api.protos.containers.v1.RunRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.docker.api.protos.containers.v1.RunRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.docker.api.protos.containers.v1.RunRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.containers.v1.RunRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getImage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPortsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.com.docker.api.protos.containers.v1.Port.serializeBinaryToWriter
    );
  }
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getVolumesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.com.docker.api.protos.containers.v1.RunRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.docker.api.protos.containers.v1.RunRequest} returns this
 */
proto.com.docker.api.protos.containers.v1.RunRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string image = 2;
 * @return {string}
 */
proto.com.docker.api.protos.containers.v1.RunRequest.prototype.getImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.docker.api.protos.containers.v1.RunRequest} returns this
 */
proto.com.docker.api.protos.containers.v1.RunRequest.prototype.setImage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Port ports = 3;
 * @return {!Array<!proto.com.docker.api.protos.containers.v1.Port>}
 */
proto.com.docker.api.protos.containers.v1.RunRequest.prototype.getPortsList = function() {
  return /** @type{!Array<!proto.com.docker.api.protos.containers.v1.Port>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.docker.api.protos.containers.v1.Port, 3));
};


/**
 * @param {!Array<!proto.com.docker.api.protos.containers.v1.Port>} value
 * @return {!proto.com.docker.api.protos.containers.v1.RunRequest} returns this
*/
proto.com.docker.api.protos.containers.v1.RunRequest.prototype.setPortsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.com.docker.api.protos.containers.v1.Port=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.docker.api.protos.containers.v1.Port}
 */
proto.com.docker.api.protos.containers.v1.RunRequest.prototype.addPorts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.com.docker.api.protos.containers.v1.Port, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.docker.api.protos.containers.v1.RunRequest} returns this
 */
proto.com.docker.api.protos.containers.v1.RunRequest.prototype.clearPortsList = function() {
  return this.setPortsList([]);
};


/**
 * map<string, string> labels = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.com.docker.api.protos.containers.v1.RunRequest.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.com.docker.api.protos.containers.v1.RunRequest} returns this
 */
proto.com.docker.api.protos.containers.v1.RunRequest.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
  return this;};


/**
 * repeated string volumes = 5;
 * @return {!Array<string>}
 */
proto.com.docker.api.protos.containers.v1.RunRequest.prototype.getVolumesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.com.docker.api.protos.containers.v1.RunRequest} returns this
 */
proto.com.docker.api.protos.containers.v1.RunRequest.prototype.setVolumesList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.com.docker.api.protos.containers.v1.RunRequest} returns this
 */
proto.com.docker.api.protos.containers.v1.RunRequest.prototype.addVolumes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.docker.api.protos.containers.v1.RunRequest} returns this
 */
proto.com.docker.api.protos.containers.v1.RunRequest.prototype.clearVolumesList = function() {
  return this.setVolumesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.docker.api.protos.containers.v1.RunResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.docker.api.protos.containers.v1.RunResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.docker.api.protos.containers.v1.RunResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.containers.v1.RunResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.docker.api.protos.containers.v1.RunResponse}
 */
proto.com.docker.api.protos.containers.v1.RunResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.docker.api.protos.containers.v1.RunResponse;
  return proto.com.docker.api.protos.containers.v1.RunResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.docker.api.protos.containers.v1.RunResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.docker.api.protos.containers.v1.RunResponse}
 */
proto.com.docker.api.protos.containers.v1.RunResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.docker.api.protos.containers.v1.RunResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.docker.api.protos.containers.v1.RunResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.docker.api.protos.containers.v1.RunResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.containers.v1.RunResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.docker.api.protos.containers.v1.ExecRequest.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.docker.api.protos.containers.v1.ExecRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.docker.api.protos.containers.v1.ExecRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.docker.api.protos.containers.v1.ExecRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.containers.v1.ExecRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    command: jspb.Message.getFieldWithDefault(msg, 2, ""),
    streamId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    argsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    envList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    tty: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.docker.api.protos.containers.v1.ExecRequest}
 */
proto.com.docker.api.protos.containers.v1.ExecRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.docker.api.protos.containers.v1.ExecRequest;
  return proto.com.docker.api.protos.containers.v1.ExecRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.docker.api.protos.containers.v1.ExecRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.docker.api.protos.containers.v1.ExecRequest}
 */
proto.com.docker.api.protos.containers.v1.ExecRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommand(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStreamId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addArgs(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addEnv(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTty(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.docker.api.protos.containers.v1.ExecRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.docker.api.protos.containers.v1.ExecRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.docker.api.protos.containers.v1.ExecRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.containers.v1.ExecRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCommand();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStreamId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getArgsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getEnvList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getTty();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.com.docker.api.protos.containers.v1.ExecRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.docker.api.protos.containers.v1.ExecRequest} returns this
 */
proto.com.docker.api.protos.containers.v1.ExecRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string command = 2;
 * @return {string}
 */
proto.com.docker.api.protos.containers.v1.ExecRequest.prototype.getCommand = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.docker.api.protos.containers.v1.ExecRequest} returns this
 */
proto.com.docker.api.protos.containers.v1.ExecRequest.prototype.setCommand = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string stream_id = 3;
 * @return {string}
 */
proto.com.docker.api.protos.containers.v1.ExecRequest.prototype.getStreamId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.docker.api.protos.containers.v1.ExecRequest} returns this
 */
proto.com.docker.api.protos.containers.v1.ExecRequest.prototype.setStreamId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string args = 4;
 * @return {!Array<string>}
 */
proto.com.docker.api.protos.containers.v1.ExecRequest.prototype.getArgsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.com.docker.api.protos.containers.v1.ExecRequest} returns this
 */
proto.com.docker.api.protos.containers.v1.ExecRequest.prototype.setArgsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.com.docker.api.protos.containers.v1.ExecRequest} returns this
 */
proto.com.docker.api.protos.containers.v1.ExecRequest.prototype.addArgs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.docker.api.protos.containers.v1.ExecRequest} returns this
 */
proto.com.docker.api.protos.containers.v1.ExecRequest.prototype.clearArgsList = function() {
  return this.setArgsList([]);
};


/**
 * repeated string env = 5;
 * @return {!Array<string>}
 */
proto.com.docker.api.protos.containers.v1.ExecRequest.prototype.getEnvList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.com.docker.api.protos.containers.v1.ExecRequest} returns this
 */
proto.com.docker.api.protos.containers.v1.ExecRequest.prototype.setEnvList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.com.docker.api.protos.containers.v1.ExecRequest} returns this
 */
proto.com.docker.api.protos.containers.v1.ExecRequest.prototype.addEnv = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.docker.api.protos.containers.v1.ExecRequest} returns this
 */
proto.com.docker.api.protos.containers.v1.ExecRequest.prototype.clearEnvList = function() {
  return this.setEnvList([]);
};


/**
 * optional bool tty = 6;
 * @return {boolean}
 */
proto.com.docker.api.protos.containers.v1.ExecRequest.prototype.getTty = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.docker.api.protos.containers.v1.ExecRequest} returns this
 */
proto.com.docker.api.protos.containers.v1.ExecRequest.prototype.setTty = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.docker.api.protos.containers.v1.ExecResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.docker.api.protos.containers.v1.ExecResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.docker.api.protos.containers.v1.ExecResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.containers.v1.ExecResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    output: msg.getOutput_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.docker.api.protos.containers.v1.ExecResponse}
 */
proto.com.docker.api.protos.containers.v1.ExecResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.docker.api.protos.containers.v1.ExecResponse;
  return proto.com.docker.api.protos.containers.v1.ExecResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.docker.api.protos.containers.v1.ExecResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.docker.api.protos.containers.v1.ExecResponse}
 */
proto.com.docker.api.protos.containers.v1.ExecResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOutput(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.docker.api.protos.containers.v1.ExecResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.docker.api.protos.containers.v1.ExecResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.docker.api.protos.containers.v1.ExecResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.containers.v1.ExecResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOutput_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes output = 1;
 * @return {!(string|Uint8Array)}
 */
proto.com.docker.api.protos.containers.v1.ExecResponse.prototype.getOutput = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes output = 1;
 * This is a type-conversion wrapper around `getOutput()`
 * @return {string}
 */
proto.com.docker.api.protos.containers.v1.ExecResponse.prototype.getOutput_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOutput()));
};


/**
 * optional bytes output = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOutput()`
 * @return {!Uint8Array}
 */
proto.com.docker.api.protos.containers.v1.ExecResponse.prototype.getOutput_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOutput()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.com.docker.api.protos.containers.v1.ExecResponse} returns this
 */
proto.com.docker.api.protos.containers.v1.ExecResponse.prototype.setOutput = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.docker.api.protos.containers.v1.ListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.docker.api.protos.containers.v1.ListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.docker.api.protos.containers.v1.ListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.containers.v1.ListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    all: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.docker.api.protos.containers.v1.ListRequest}
 */
proto.com.docker.api.protos.containers.v1.ListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.docker.api.protos.containers.v1.ListRequest;
  return proto.com.docker.api.protos.containers.v1.ListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.docker.api.protos.containers.v1.ListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.docker.api.protos.containers.v1.ListRequest}
 */
proto.com.docker.api.protos.containers.v1.ListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAll(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.docker.api.protos.containers.v1.ListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.docker.api.protos.containers.v1.ListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.docker.api.protos.containers.v1.ListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.containers.v1.ListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAll();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool all = 1;
 * @return {boolean}
 */
proto.com.docker.api.protos.containers.v1.ListRequest.prototype.getAll = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.docker.api.protos.containers.v1.ListRequest} returns this
 */
proto.com.docker.api.protos.containers.v1.ListRequest.prototype.setAll = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.docker.api.protos.containers.v1.ListResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.docker.api.protos.containers.v1.ListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.docker.api.protos.containers.v1.ListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.docker.api.protos.containers.v1.ListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.containers.v1.ListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    containersList: jspb.Message.toObjectList(msg.getContainersList(),
    proto.com.docker.api.protos.containers.v1.Container.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.docker.api.protos.containers.v1.ListResponse}
 */
proto.com.docker.api.protos.containers.v1.ListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.docker.api.protos.containers.v1.ListResponse;
  return proto.com.docker.api.protos.containers.v1.ListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.docker.api.protos.containers.v1.ListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.docker.api.protos.containers.v1.ListResponse}
 */
proto.com.docker.api.protos.containers.v1.ListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.docker.api.protos.containers.v1.Container;
      reader.readMessage(value,proto.com.docker.api.protos.containers.v1.Container.deserializeBinaryFromReader);
      msg.addContainers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.docker.api.protos.containers.v1.ListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.docker.api.protos.containers.v1.ListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.docker.api.protos.containers.v1.ListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.containers.v1.ListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContainersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.com.docker.api.protos.containers.v1.Container.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Container containers = 1;
 * @return {!Array<!proto.com.docker.api.protos.containers.v1.Container>}
 */
proto.com.docker.api.protos.containers.v1.ListResponse.prototype.getContainersList = function() {
  return /** @type{!Array<!proto.com.docker.api.protos.containers.v1.Container>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.docker.api.protos.containers.v1.Container, 1));
};


/**
 * @param {!Array<!proto.com.docker.api.protos.containers.v1.Container>} value
 * @return {!proto.com.docker.api.protos.containers.v1.ListResponse} returns this
*/
proto.com.docker.api.protos.containers.v1.ListResponse.prototype.setContainersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.docker.api.protos.containers.v1.Container=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.docker.api.protos.containers.v1.Container}
 */
proto.com.docker.api.protos.containers.v1.ListResponse.prototype.addContainers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.docker.api.protos.containers.v1.Container, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.docker.api.protos.containers.v1.ListResponse} returns this
 */
proto.com.docker.api.protos.containers.v1.ListResponse.prototype.clearContainersList = function() {
  return this.setContainersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.docker.api.protos.containers.v1.LogsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.docker.api.protos.containers.v1.LogsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.docker.api.protos.containers.v1.LogsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.containers.v1.LogsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    containerId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    follow: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.docker.api.protos.containers.v1.LogsRequest}
 */
proto.com.docker.api.protos.containers.v1.LogsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.docker.api.protos.containers.v1.LogsRequest;
  return proto.com.docker.api.protos.containers.v1.LogsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.docker.api.protos.containers.v1.LogsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.docker.api.protos.containers.v1.LogsRequest}
 */
proto.com.docker.api.protos.containers.v1.LogsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContainerId(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFollow(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.docker.api.protos.containers.v1.LogsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.docker.api.protos.containers.v1.LogsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.docker.api.protos.containers.v1.LogsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.containers.v1.LogsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContainerId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFollow();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string container_id = 1;
 * @return {string}
 */
proto.com.docker.api.protos.containers.v1.LogsRequest.prototype.getContainerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.docker.api.protos.containers.v1.LogsRequest} returns this
 */
proto.com.docker.api.protos.containers.v1.LogsRequest.prototype.setContainerId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool follow = 3;
 * @return {boolean}
 */
proto.com.docker.api.protos.containers.v1.LogsRequest.prototype.getFollow = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.docker.api.protos.containers.v1.LogsRequest} returns this
 */
proto.com.docker.api.protos.containers.v1.LogsRequest.prototype.setFollow = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.docker.api.protos.containers.v1.LogsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.docker.api.protos.containers.v1.LogsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.docker.api.protos.containers.v1.LogsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.containers.v1.LogsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: msg.getValue_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.docker.api.protos.containers.v1.LogsResponse}
 */
proto.com.docker.api.protos.containers.v1.LogsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.docker.api.protos.containers.v1.LogsResponse;
  return proto.com.docker.api.protos.containers.v1.LogsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.docker.api.protos.containers.v1.LogsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.docker.api.protos.containers.v1.LogsResponse}
 */
proto.com.docker.api.protos.containers.v1.LogsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.docker.api.protos.containers.v1.LogsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.docker.api.protos.containers.v1.LogsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.docker.api.protos.containers.v1.LogsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.containers.v1.LogsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes value = 1;
 * @return {!(string|Uint8Array)}
 */
proto.com.docker.api.protos.containers.v1.LogsResponse.prototype.getValue = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes value = 1;
 * This is a type-conversion wrapper around `getValue()`
 * @return {string}
 */
proto.com.docker.api.protos.containers.v1.LogsResponse.prototype.getValue_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getValue()));
};


/**
 * optional bytes value = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getValue()`
 * @return {!Uint8Array}
 */
proto.com.docker.api.protos.containers.v1.LogsResponse.prototype.getValue_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getValue()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.com.docker.api.protos.containers.v1.LogsResponse} returns this
 */
proto.com.docker.api.protos.containers.v1.LogsResponse.prototype.setValue = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


goog.object.extend(exports, proto.com.docker.api.protos.containers.v1);
