// source: volumes/v1/volumes.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
goog.exportSymbol('proto.com.docker.api.protos.volumes.v1.AciVolumeCreateOptions', null, global);
goog.exportSymbol('proto.com.docker.api.protos.volumes.v1.Volume', null, global);
goog.exportSymbol('proto.com.docker.api.protos.volumes.v1.VolumesCreateRequest', null, global);
goog.exportSymbol('proto.com.docker.api.protos.volumes.v1.VolumesCreateRequest.OptionsCase', null, global);
goog.exportSymbol('proto.com.docker.api.protos.volumes.v1.VolumesCreateResponse', null, global);
goog.exportSymbol('proto.com.docker.api.protos.volumes.v1.VolumesDeleteRequest', null, global);
goog.exportSymbol('proto.com.docker.api.protos.volumes.v1.VolumesDeleteResponse', null, global);
goog.exportSymbol('proto.com.docker.api.protos.volumes.v1.VolumesListRequest', null, global);
goog.exportSymbol('proto.com.docker.api.protos.volumes.v1.VolumesListResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.docker.api.protos.volumes.v1.Volume = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.docker.api.protos.volumes.v1.Volume, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.docker.api.protos.volumes.v1.Volume.displayName = 'proto.com.docker.api.protos.volumes.v1.Volume';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.docker.api.protos.volumes.v1.AciVolumeCreateOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.docker.api.protos.volumes.v1.AciVolumeCreateOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.docker.api.protos.volumes.v1.AciVolumeCreateOptions.displayName = 'proto.com.docker.api.protos.volumes.v1.AciVolumeCreateOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.docker.api.protos.volumes.v1.VolumesCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.com.docker.api.protos.volumes.v1.VolumesCreateRequest.oneofGroups_);
};
goog.inherits(proto.com.docker.api.protos.volumes.v1.VolumesCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.docker.api.protos.volumes.v1.VolumesCreateRequest.displayName = 'proto.com.docker.api.protos.volumes.v1.VolumesCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.docker.api.protos.volumes.v1.VolumesCreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.docker.api.protos.volumes.v1.VolumesCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.docker.api.protos.volumes.v1.VolumesCreateResponse.displayName = 'proto.com.docker.api.protos.volumes.v1.VolumesCreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.docker.api.protos.volumes.v1.VolumesListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.docker.api.protos.volumes.v1.VolumesListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.docker.api.protos.volumes.v1.VolumesListRequest.displayName = 'proto.com.docker.api.protos.volumes.v1.VolumesListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.docker.api.protos.volumes.v1.VolumesListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.docker.api.protos.volumes.v1.VolumesListResponse.repeatedFields_, null);
};
goog.inherits(proto.com.docker.api.protos.volumes.v1.VolumesListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.docker.api.protos.volumes.v1.VolumesListResponse.displayName = 'proto.com.docker.api.protos.volumes.v1.VolumesListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.docker.api.protos.volumes.v1.VolumesDeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.docker.api.protos.volumes.v1.VolumesDeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.docker.api.protos.volumes.v1.VolumesDeleteRequest.displayName = 'proto.com.docker.api.protos.volumes.v1.VolumesDeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.docker.api.protos.volumes.v1.VolumesDeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.docker.api.protos.volumes.v1.VolumesDeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.docker.api.protos.volumes.v1.VolumesDeleteResponse.displayName = 'proto.com.docker.api.protos.volumes.v1.VolumesDeleteResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.docker.api.protos.volumes.v1.Volume.prototype.toObject = function(opt_includeInstance) {
  return proto.com.docker.api.protos.volumes.v1.Volume.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.docker.api.protos.volumes.v1.Volume} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.volumes.v1.Volume.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.docker.api.protos.volumes.v1.Volume}
 */
proto.com.docker.api.protos.volumes.v1.Volume.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.docker.api.protos.volumes.v1.Volume;
  return proto.com.docker.api.protos.volumes.v1.Volume.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.docker.api.protos.volumes.v1.Volume} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.docker.api.protos.volumes.v1.Volume}
 */
proto.com.docker.api.protos.volumes.v1.Volume.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.docker.api.protos.volumes.v1.Volume.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.docker.api.protos.volumes.v1.Volume.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.docker.api.protos.volumes.v1.Volume} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.volumes.v1.Volume.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.com.docker.api.protos.volumes.v1.Volume.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.docker.api.protos.volumes.v1.Volume} returns this
 */
proto.com.docker.api.protos.volumes.v1.Volume.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.com.docker.api.protos.volumes.v1.Volume.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.docker.api.protos.volumes.v1.Volume} returns this
 */
proto.com.docker.api.protos.volumes.v1.Volume.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.docker.api.protos.volumes.v1.AciVolumeCreateOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.com.docker.api.protos.volumes.v1.AciVolumeCreateOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.docker.api.protos.volumes.v1.AciVolumeCreateOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.volumes.v1.AciVolumeCreateOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    storageAccount: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.docker.api.protos.volumes.v1.AciVolumeCreateOptions}
 */
proto.com.docker.api.protos.volumes.v1.AciVolumeCreateOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.docker.api.protos.volumes.v1.AciVolumeCreateOptions;
  return proto.com.docker.api.protos.volumes.v1.AciVolumeCreateOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.docker.api.protos.volumes.v1.AciVolumeCreateOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.docker.api.protos.volumes.v1.AciVolumeCreateOptions}
 */
proto.com.docker.api.protos.volumes.v1.AciVolumeCreateOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStorageAccount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.docker.api.protos.volumes.v1.AciVolumeCreateOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.docker.api.protos.volumes.v1.AciVolumeCreateOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.docker.api.protos.volumes.v1.AciVolumeCreateOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.volumes.v1.AciVolumeCreateOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStorageAccount();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string storage_account = 1;
 * @return {string}
 */
proto.com.docker.api.protos.volumes.v1.AciVolumeCreateOptions.prototype.getStorageAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.docker.api.protos.volumes.v1.AciVolumeCreateOptions} returns this
 */
proto.com.docker.api.protos.volumes.v1.AciVolumeCreateOptions.prototype.setStorageAccount = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.com.docker.api.protos.volumes.v1.VolumesCreateRequest.oneofGroups_ = [[2]];

/**
 * @enum {number}
 */
proto.com.docker.api.protos.volumes.v1.VolumesCreateRequest.OptionsCase = {
  OPTIONS_NOT_SET: 0,
  ACI_OPTION: 2
};

/**
 * @return {proto.com.docker.api.protos.volumes.v1.VolumesCreateRequest.OptionsCase}
 */
proto.com.docker.api.protos.volumes.v1.VolumesCreateRequest.prototype.getOptionsCase = function() {
  return /** @type {proto.com.docker.api.protos.volumes.v1.VolumesCreateRequest.OptionsCase} */(jspb.Message.computeOneofCase(this, proto.com.docker.api.protos.volumes.v1.VolumesCreateRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.docker.api.protos.volumes.v1.VolumesCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.docker.api.protos.volumes.v1.VolumesCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.docker.api.protos.volumes.v1.VolumesCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.volumes.v1.VolumesCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    aciOption: (f = msg.getAciOption()) && proto.com.docker.api.protos.volumes.v1.AciVolumeCreateOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.docker.api.protos.volumes.v1.VolumesCreateRequest}
 */
proto.com.docker.api.protos.volumes.v1.VolumesCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.docker.api.protos.volumes.v1.VolumesCreateRequest;
  return proto.com.docker.api.protos.volumes.v1.VolumesCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.docker.api.protos.volumes.v1.VolumesCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.docker.api.protos.volumes.v1.VolumesCreateRequest}
 */
proto.com.docker.api.protos.volumes.v1.VolumesCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.com.docker.api.protos.volumes.v1.AciVolumeCreateOptions;
      reader.readMessage(value,proto.com.docker.api.protos.volumes.v1.AciVolumeCreateOptions.deserializeBinaryFromReader);
      msg.setAciOption(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.docker.api.protos.volumes.v1.VolumesCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.docker.api.protos.volumes.v1.VolumesCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.docker.api.protos.volumes.v1.VolumesCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.volumes.v1.VolumesCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAciOption();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.com.docker.api.protos.volumes.v1.AciVolumeCreateOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.com.docker.api.protos.volumes.v1.VolumesCreateRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.docker.api.protos.volumes.v1.VolumesCreateRequest} returns this
 */
proto.com.docker.api.protos.volumes.v1.VolumesCreateRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional AciVolumeCreateOptions aci_option = 2;
 * @return {?proto.com.docker.api.protos.volumes.v1.AciVolumeCreateOptions}
 */
proto.com.docker.api.protos.volumes.v1.VolumesCreateRequest.prototype.getAciOption = function() {
  return /** @type{?proto.com.docker.api.protos.volumes.v1.AciVolumeCreateOptions} */ (
    jspb.Message.getWrapperField(this, proto.com.docker.api.protos.volumes.v1.AciVolumeCreateOptions, 2));
};


/**
 * @param {?proto.com.docker.api.protos.volumes.v1.AciVolumeCreateOptions|undefined} value
 * @return {!proto.com.docker.api.protos.volumes.v1.VolumesCreateRequest} returns this
*/
proto.com.docker.api.protos.volumes.v1.VolumesCreateRequest.prototype.setAciOption = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.com.docker.api.protos.volumes.v1.VolumesCreateRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.docker.api.protos.volumes.v1.VolumesCreateRequest} returns this
 */
proto.com.docker.api.protos.volumes.v1.VolumesCreateRequest.prototype.clearAciOption = function() {
  return this.setAciOption(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.docker.api.protos.volumes.v1.VolumesCreateRequest.prototype.hasAciOption = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.docker.api.protos.volumes.v1.VolumesCreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.docker.api.protos.volumes.v1.VolumesCreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.docker.api.protos.volumes.v1.VolumesCreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.volumes.v1.VolumesCreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    volume: (f = msg.getVolume()) && proto.com.docker.api.protos.volumes.v1.Volume.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.docker.api.protos.volumes.v1.VolumesCreateResponse}
 */
proto.com.docker.api.protos.volumes.v1.VolumesCreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.docker.api.protos.volumes.v1.VolumesCreateResponse;
  return proto.com.docker.api.protos.volumes.v1.VolumesCreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.docker.api.protos.volumes.v1.VolumesCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.docker.api.protos.volumes.v1.VolumesCreateResponse}
 */
proto.com.docker.api.protos.volumes.v1.VolumesCreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.docker.api.protos.volumes.v1.Volume;
      reader.readMessage(value,proto.com.docker.api.protos.volumes.v1.Volume.deserializeBinaryFromReader);
      msg.setVolume(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.docker.api.protos.volumes.v1.VolumesCreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.docker.api.protos.volumes.v1.VolumesCreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.docker.api.protos.volumes.v1.VolumesCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.volumes.v1.VolumesCreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolume();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.com.docker.api.protos.volumes.v1.Volume.serializeBinaryToWriter
    );
  }
};


/**
 * optional Volume volume = 1;
 * @return {?proto.com.docker.api.protos.volumes.v1.Volume}
 */
proto.com.docker.api.protos.volumes.v1.VolumesCreateResponse.prototype.getVolume = function() {
  return /** @type{?proto.com.docker.api.protos.volumes.v1.Volume} */ (
    jspb.Message.getWrapperField(this, proto.com.docker.api.protos.volumes.v1.Volume, 1));
};


/**
 * @param {?proto.com.docker.api.protos.volumes.v1.Volume|undefined} value
 * @return {!proto.com.docker.api.protos.volumes.v1.VolumesCreateResponse} returns this
*/
proto.com.docker.api.protos.volumes.v1.VolumesCreateResponse.prototype.setVolume = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.docker.api.protos.volumes.v1.VolumesCreateResponse} returns this
 */
proto.com.docker.api.protos.volumes.v1.VolumesCreateResponse.prototype.clearVolume = function() {
  return this.setVolume(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.docker.api.protos.volumes.v1.VolumesCreateResponse.prototype.hasVolume = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.docker.api.protos.volumes.v1.VolumesListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.docker.api.protos.volumes.v1.VolumesListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.docker.api.protos.volumes.v1.VolumesListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.volumes.v1.VolumesListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.docker.api.protos.volumes.v1.VolumesListRequest}
 */
proto.com.docker.api.protos.volumes.v1.VolumesListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.docker.api.protos.volumes.v1.VolumesListRequest;
  return proto.com.docker.api.protos.volumes.v1.VolumesListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.docker.api.protos.volumes.v1.VolumesListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.docker.api.protos.volumes.v1.VolumesListRequest}
 */
proto.com.docker.api.protos.volumes.v1.VolumesListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.docker.api.protos.volumes.v1.VolumesListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.docker.api.protos.volumes.v1.VolumesListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.docker.api.protos.volumes.v1.VolumesListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.volumes.v1.VolumesListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.docker.api.protos.volumes.v1.VolumesListResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.docker.api.protos.volumes.v1.VolumesListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.docker.api.protos.volumes.v1.VolumesListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.docker.api.protos.volumes.v1.VolumesListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.volumes.v1.VolumesListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumesList: jspb.Message.toObjectList(msg.getVolumesList(),
    proto.com.docker.api.protos.volumes.v1.Volume.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.docker.api.protos.volumes.v1.VolumesListResponse}
 */
proto.com.docker.api.protos.volumes.v1.VolumesListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.docker.api.protos.volumes.v1.VolumesListResponse;
  return proto.com.docker.api.protos.volumes.v1.VolumesListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.docker.api.protos.volumes.v1.VolumesListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.docker.api.protos.volumes.v1.VolumesListResponse}
 */
proto.com.docker.api.protos.volumes.v1.VolumesListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.docker.api.protos.volumes.v1.Volume;
      reader.readMessage(value,proto.com.docker.api.protos.volumes.v1.Volume.deserializeBinaryFromReader);
      msg.addVolumes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.docker.api.protos.volumes.v1.VolumesListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.docker.api.protos.volumes.v1.VolumesListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.docker.api.protos.volumes.v1.VolumesListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.volumes.v1.VolumesListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.com.docker.api.protos.volumes.v1.Volume.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Volume volumes = 1;
 * @return {!Array<!proto.com.docker.api.protos.volumes.v1.Volume>}
 */
proto.com.docker.api.protos.volumes.v1.VolumesListResponse.prototype.getVolumesList = function() {
  return /** @type{!Array<!proto.com.docker.api.protos.volumes.v1.Volume>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.docker.api.protos.volumes.v1.Volume, 1));
};


/**
 * @param {!Array<!proto.com.docker.api.protos.volumes.v1.Volume>} value
 * @return {!proto.com.docker.api.protos.volumes.v1.VolumesListResponse} returns this
*/
proto.com.docker.api.protos.volumes.v1.VolumesListResponse.prototype.setVolumesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.docker.api.protos.volumes.v1.Volume=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.docker.api.protos.volumes.v1.Volume}
 */
proto.com.docker.api.protos.volumes.v1.VolumesListResponse.prototype.addVolumes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.docker.api.protos.volumes.v1.Volume, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.docker.api.protos.volumes.v1.VolumesListResponse} returns this
 */
proto.com.docker.api.protos.volumes.v1.VolumesListResponse.prototype.clearVolumesList = function() {
  return this.setVolumesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.docker.api.protos.volumes.v1.VolumesDeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.docker.api.protos.volumes.v1.VolumesDeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.docker.api.protos.volumes.v1.VolumesDeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.volumes.v1.VolumesDeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.docker.api.protos.volumes.v1.VolumesDeleteRequest}
 */
proto.com.docker.api.protos.volumes.v1.VolumesDeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.docker.api.protos.volumes.v1.VolumesDeleteRequest;
  return proto.com.docker.api.protos.volumes.v1.VolumesDeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.docker.api.protos.volumes.v1.VolumesDeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.docker.api.protos.volumes.v1.VolumesDeleteRequest}
 */
proto.com.docker.api.protos.volumes.v1.VolumesDeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.docker.api.protos.volumes.v1.VolumesDeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.docker.api.protos.volumes.v1.VolumesDeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.docker.api.protos.volumes.v1.VolumesDeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.volumes.v1.VolumesDeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.com.docker.api.protos.volumes.v1.VolumesDeleteRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.docker.api.protos.volumes.v1.VolumesDeleteRequest} returns this
 */
proto.com.docker.api.protos.volumes.v1.VolumesDeleteRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.docker.api.protos.volumes.v1.VolumesDeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.docker.api.protos.volumes.v1.VolumesDeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.docker.api.protos.volumes.v1.VolumesDeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.volumes.v1.VolumesDeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.docker.api.protos.volumes.v1.VolumesDeleteResponse}
 */
proto.com.docker.api.protos.volumes.v1.VolumesDeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.docker.api.protos.volumes.v1.VolumesDeleteResponse;
  return proto.com.docker.api.protos.volumes.v1.VolumesDeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.docker.api.protos.volumes.v1.VolumesDeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.docker.api.protos.volumes.v1.VolumesDeleteResponse}
 */
proto.com.docker.api.protos.volumes.v1.VolumesDeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.docker.api.protos.volumes.v1.VolumesDeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.docker.api.protos.volumes.v1.VolumesDeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.docker.api.protos.volumes.v1.VolumesDeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.docker.api.protos.volumes.v1.VolumesDeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.com.docker.api.protos.volumes.v1);
